using System;
using System.Collections.Generic;

namespace PilasApp
{
    class Program
    {
        // Función para verificar si los paréntesis, corchetes y llaves en una expresión matemática están balanceados.
        static bool VerificarBalance(string expresion)
        {
            Stack<char> pila = new Stack<char>();

            // Recorrer cada carácter de la expresión
            foreach (char c in expresion)
            {
                // Si el carácter es un paréntesis, corchete o llave de apertura, se añade a la pila
                if (c == '(' || c == '{' || c == '[')
                {
                    pila.Push(c);
                }
                // Si el carácter es un paréntesis, corchete o llave de cierre
                else if (c == ')' || c == '}' || c == ']')
                {
                    // Si la pila está vacía, significa que hay un paréntesis, corchete o llave de cierre sin apertura correspondiente
                    if (pila.Count == 0)
                        return false;

                    char top = pila.Pop();

                    // Verificar si el carácter de cierre corresponde al último carácter de apertura en la pila
                    if ((c == ')' && top != '(') || (c == '}' && top != '{') || (c == ']' && top != '['))
                    {
                        return false;
                    }
                }
            }

            // Si la pila está vacía, la expresión está balanceada
            return pila.Count == 0;
        }

        static void Main(string[] args)
        {
            string expresion = "{7+(8*5)-[(9-7)+(4+1)]}";

            if (VerificarBalance(expresion))
                Console.WriteLine("La expresión está balanceada.");
            else
                Console.WriteLine("La expresión no está balanceada.");
        }
    }
}
